{"version":3,"file":"static/js/cast.1d543f40.chunk.js","mappings":"mQAkBMA,EAAUC,EAAAA,GAAAA,IAAH,sFAMPC,EAAQD,EAAAA,GAAAA,IAAH,+CAILE,EAAUF,EAAAA,GAAAA,IAAH,wGAOPG,EAAQH,EAAAA,GAAAA,GAAH,wIASLI,EAAWJ,EAAAA,GAAAA,EAAH,yHAQd,EAjDiB,SAAC,GAAgC,IAA9BK,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACnC,OACE,UAACR,EAAD,WACGQ,GACC,SAACN,EAAD,CAAOO,IAAG,yCAAoCD,GAASE,IAAKJ,KAE5D,SAACH,EAAD,CAASM,IAAKE,EAASD,IAAKJ,KAG9B,SAACF,EAAD,UAAQE,KACR,SAACD,EAAD,UAAWE,QCkBXK,EAAOX,EAAAA,GAAAA,GAAH,yPAMY,SAAAY,GAAC,OAAIA,EAAEC,MAAMC,aAQ7BC,EAAOf,EAAAA,GAAAA,GAAH,yCAIV,EA1Ca,SAAC,GAAiB,IAAfgB,EAAc,EAAdA,QACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUL,GAASM,MAAK,SAAAC,GACtBJ,EAAmBI,ECVlBL,KAAKM,KAAI,SAAAC,GAAI,MAAK,CACrBC,GAAID,EAAKC,GACTrB,KAAMoB,EAAKE,cACXrB,UAAWmB,EAAKnB,UAChBC,MAAOkB,EAAKG,uBDQX,CAACZ,KAGF,SAACL,EAAD,UACGO,EAAKW,OAAS,GACbX,EAAKM,KAAI,SAAAC,GAAI,OACX,SAACV,EAAD,WACE,SAAC,EAAD,CACEV,KAAMoB,EAAKpB,KACXC,UAAWmB,EAAKnB,UAChBC,MAAOkB,EAAKlB,SAJLkB,EAAKC,W","sources":["components/Cast/CastItem/CastItem.jsx","components/Cast/Cast.jsx","utils/mappedCast.js"],"sourcesContent":["import noPhoto from './nophoto.jpg';\nimport styled from 'styled-components';\n\nconst CastItem = ({ name, character, photo }) => {\n  return (\n    <Wrapper>\n      {photo ? (\n        <Photo src={`https://themoviedb.org/t/p/w342${photo}`} alt={name} />\n      ) : (\n        <NoPhoto src={noPhoto} alt={name} />\n      )}\n\n      <Title>{name}</Title>\n      <Subtitle>{character}</Subtitle>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 124px;\n`;\n\nconst Photo = styled.img`\n  border-radius: 5px;\n`;\n\nconst NoPhoto = styled.img`\n  width: 124px;\n  height: 186px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nconst Title = styled.h4`\n  margin-top: 5px;\n  padding: 0 2px;\n  color: #ffa600;\n  margin: 0;\n  margin-top: 5px;\n  font-size: 14px;\n`;\n\nconst Subtitle = styled.p`\n  margin-top: 5px;\n  padding: 0 2px;\n  color: #000;\n  font-size: 13px;\n  font-weight: bold;\n`;\n\nexport default CastItem;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { fetchCast } from 'services/fetchApi';\nimport { mappedCast } from 'utils/mappedCast';\nimport CastItem from './CastItem/CastItem';\nimport styled from 'styled-components';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    fetchCast(movieId).then(data => {\n      setCast(mappedCast(data));\n    });\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast.length > 0 &&\n        cast.map(item => (\n          <Item key={item.id}>\n            <CastItem\n              name={item.name}\n              character={item.character}\n              photo={item.photo}\n            />\n          </Item>\n        ))}\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding: 11px;\n  background-color: ${p => p.theme.mainColor};\n  border-radius: 10px;\n  & .noCredits {\n    margin-right: auto;\n    font-size: 20px;\n  }\n`;\n\nconst Item = styled.li`\n  padding: 8px;\n`;\n\nexport default Cast;\n","export const mappedCast = list =>\n  list.cast.map(item => ({\n    id: item.id,\n    name: item.original_name,\n    character: item.character,\n    photo: item.profile_path,\n  }));\n"],"names":["Wrapper","styled","Photo","NoPhoto","Title","Subtitle","name","character","photo","src","alt","noPhoto","List","p","theme","mainColor","Item","movieId","useState","cast","setCast","useEffect","fetchCast","then","data","map","item","id","original_name","profile_path","length"],"sourceRoot":""}