{"version":3,"file":"static/js/home-view.5d709522.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","components/MovieDetails/MovieDetails.jsx","components/MovieDetails/MovieNav/MovieNav.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","utils/mappedDetails.js","utils/mappedGenres.js","components/SearchMovie/SearchMovie.jsx","pages/MoviesPage/MoviesPage.jsx","services/fetchApi.jsx","utils/mappedMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst MoviesItem = ({ posterPath, title }) => {\n  return (\n    <Wrapper>\n      <Picture\n        src={`https://themoviedb.org/t/p/w342${posterPath}`}\n        alt={title}\n      />\n      <Title>{title}</Title>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  border-radius: 5px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  width: 260px;\n  transform: scale(1);\n  transition: transform #ffa600;\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0px 0px 8px 6px #ffa600;\n    transform: scale(1.04);\n  }\n`;\n\nconst Picture = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 400px;\n  border-radius: 5px;\n`;\n\nconst Title = styled.h3`\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 12px / 14px;\n  color: #000;\n`;\nexport default MoviesItem;\n","import { Link, useLocation } from 'react-router-dom';\nimport MoviesItem from './MoviesItem/MoviesItem';\nimport styled from 'styled-components';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Wrapper>\n      {movies.map(item => (\n        <Item key={item.id}>\n          <Link to={`/movies/${item.id}`} state={{ prevUrl: location }}>\n            <MoviesItem {...item} />\n          </Link>\n        </Item>\n      ))}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.ul`\n  display: grid;\n  gap: 25px;\n  grid-template-columns: 1fr 1fr 1fr;\n`;\n\nconst Item = styled.li`\n  margin: 0 auto;\n  list-style: none;\n  text-decoration: none;\n`;\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { fetchApi } from 'services/fetchApi';\nimport styled from 'styled-components';\nimport { mappedMovies } from '../../utils/mappedMovies';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchApi().then(({ results }) => {\n      setMovies(mappedMovies(results));\n    });\n  }, []);\n\n  return (\n    <>\n      <Title>Trending Movies</Title>\n\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nconst Title = styled.h1`\n  display: block;\n  text-align: center;\n`;\n\nexport default HomePage;\n","import styled from 'styled-components';\nconst MovieDetails = ({ movie }) => {\n  return (\n    <Wrapper>\n      <ImgContainer>\n        <img\n          src={`https://themoviedb.org/t/p/w342${movie.posterPath}`}\n          alt={movie.title}\n        />\n      </ImgContainer>\n      <div>\n        <Title>{movie.title}</Title>\n\n        <Span>Genres</Span>\n        <P>{movie.genres}</P>\n        <Span>Overview</Span>\n        <Overview>{movie.overview}</Overview>\n      </div>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  padding: 30px;\n  border: 1px solid #000;\n  border-radius: 10px;\n  margin: 32px 60px;\n  display: flex;\n`;\n\nconst ImgContainer = styled.div`\n  padding-right: 25px;\n  margin-right: 25px;\n  border-right: 1px solid #000;\n`;\n\nconst Title = styled.h3`\n  font-size: 60px;\n  margin: 0;\n  color: #ffa600;\n`;\n\nconst Span = styled.span`\n  font-size: 35px;\n  margin: 0;\n  font-weight: 700;\n  display: block;\n  margin-top: 30px;\n  color: #ffa600;\n`;\n\nconst P = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n`;\n\nconst Overview = styled.p`\n  margin: 15px 0;\n  font-size: 25px;\n`;\n\nexport default MovieDetails;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MovieNav = ({ movieId }) => {\n  return (\n    <LinksMenu>\n      <LinksItem>\n        <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n      </LinksItem>\n      <LinksItem>\n        <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n      </LinksItem>\n    </LinksMenu>\n  );\n};\n\nconst LinksMenu = styled.ul`\n  margin-top: 10px;\n  margin-left: 23px;\n  display: flex;\n  align-items: center;\n\n  background-color: ${p => p.theme.mainColor};\n  border-radius: 10px;\n  list-style: none;\n`;\n\nconst LinksItem = styled.li`\n  margin-right: 10px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport default MovieNav;\n","import MovieDetails from 'components/MovieDetails/MovieDetails';\nimport MovieNav from 'components/MovieDetails/MovieNav/MovieNav';\nimport { useEffect, useState, lazy, Suspense } from 'react';\nimport {\n  Outlet,\n  Route,\n  Routes,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { fetchDetails } from 'services/fetchApi';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { mappedDetails } from 'utils/mappedDetails';\nimport styled from 'styled-components';\nimport NotFoundPage from 'components/NotFound/NotFoundPage';\n\nconst Cast = lazy(() =>\n  import('components/Cast/Cast' /* webpackChunkName: \"cast\" */)\n);\n\nconst Reviews = lazy(() =>\n  import('components/Reviews/Reviews' /* webpackChunkName: \"reviews\" */)\n);\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const { state } = useLocation();\n  const nav = useNavigate();\n\n  const [lastUrl] = useState(() => {\n    return state ? `${state.prevUrl.pathname}${state.prevUrl.search}` : '/';\n  });\n\n  const goBack = () => {\n    nav(lastUrl);\n  };\n\n  useEffect(() => {\n    Loading.circle();\n    fetchDetails(movieId).then(data => {\n      setMovie(mappedDetails(data));\n    });\n    Loading.remove();\n  }, [movieId]);\n\n  return (\n    <Suspense fallback={Loading.circle()}>\n      <>\n        {Loading.remove()}\n\n        {movie.length === 0 ? (\n          ''\n        ) : (\n          <Button onClick={goBack} type=\"button\">\n            Back\n          </Button>\n        )}\n\n        {movie.length === 0 ? <NotFoundPage /> : <MovieDetails movie={movie} />}\n        {movie.length === 0 ? '' : <MovieNav movieId={movieId} />}\n\n        <Routes>\n          <Route path=\"/\" element={<Outlet />}>\n            <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n          </Route>\n        </Routes>\n      </>\n    </Suspense>\n  );\n};\n\nconst Button = styled.button`\n  margin-top: 15px;\n  margin-left: 65px;\n  padding: 7px 15px;\n`;\n\nexport default MovieDetailsPage;\n","import { mappedGenreNames } from './mappedGenres';\n\nexport const mappedDetails = item => ({\n  id: item.id,\n  title: item.title,\n  posterPath: item.poster_path,\n  genres: mappedGenreNames(item.genres),\n  overview: item.overview,\n});\n","export const mappedGenreNames = genres =>\n  genres.map(({ name }) => name).join(', ');\n","import { useState } from 'react';\nimport { BiSearch } from 'react-icons/bi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport styled from 'styled-components';\n\nconst SearchMovie = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleNameChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      Notify.failure('Oops! Entered an empty string');\n      return;\n    }\n    onSubmit(query.trim());\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <button type=\"submit\">\n        <BiSearch size={25} />\n      </button>\n\n      <Input\n        onChange={handleNameChange}\n        type=\"text\"\n        autoComplete=\"off\"\n        value={query}\n        autoFocus\n        placeholder=\"Search images and photos\"\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nconst Input = styled.input`\n  width: 340px;\n  margin-right: 10px;\n\n  background-color: transparent;\n  padding-left: 20px;\n  font-size: 20px;\n  border: 1px solid #000;\n  border-radius: 5px;\n`;\n\nexport default SearchMovie;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from 'services/fetchApi';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { mappedMovies } from 'utils/mappedMovies';\n\nconst PARAM_QUERY = 'query';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [queryParam, setQueryParam] = useSearchParams({});\n\n  useEffect(() => {\n    const query = queryParam.get(PARAM_QUERY);\n\n    if (query) handleSubmit(query);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = query => {\n    setQueryParam({ [PARAM_QUERY]: query });\n    Loading.circle();\n\n    fetchSearch(query).then(({ results }) => {\n      if (results.length === 0) {\n        Notify.failure('Oops! Entered an empty string');\n      } else {\n        setMovies(mappedMovies(results));\n      }\n    });\n    Loading.remove();\n  };\n\n  return (\n    <>\n      <SearchMovie onSubmit={handleSubmit} />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1f2231d799563a30b24b357a44da2aa2';\n\nexport const fetchApi = async () => {\n  try {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n\nexport const fetchDetails = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n\nexport const fetchSearch = async query => {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '1f2231d799563a30b24b357a44da2aa2',\n      query: query,\n      language: 'en-US',\n      include_adult: false,\n    });\n    const url = `${BASE_URL}/search/movie?${searchParams}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n","export const mappedMovies = list =>\n  list.map(item => ({\n    id: item.id,\n    title: item.title,\n    posterPath: item.poster_path,\n    genres: item.genre_ids,\n  }));\n"],"names":["Wrapper","styled","Picture","Title","posterPath","title","src","alt","Item","movies","location","useLocation","map","item","to","id","state","prevUrl","useState","setMovies","useEffect","fetchApi","then","results","mappedMovies","ImgContainer","Span","P","Overview","movie","genres","overview","LinksMenu","p","theme","mainColor","LinksItem","movieId","Cast","lazy","Reviews","Button","useParams","setMovie","nav","useNavigate","pathname","search","lastUrl","Loading","fetchDetails","data","poster_path","name","join","mappedDetails","Suspense","fallback","length","onClick","type","NotFoundPage","path","element","Form","Input","onSubmit","query","setQuery","e","preventDefault","trim","Notify","size","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","PARAM_QUERY","useSearchParams","queryParam","setQueryParam","get","handleSubmit","fetchSearch","MoviesList","BASE_URL","API_KEY","url","fetch","response","json","fetchCast","fetchReviews","searchParams","URLSearchParams","api_key","language","include_adult","list","genre_ids"],"sourceRoot":""}