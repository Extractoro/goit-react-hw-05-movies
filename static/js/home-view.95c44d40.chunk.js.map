{"version":3,"file":"static/js/home-view.95c44d40.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","components/Cast/CastItem/CastItem.jsx","components/Cast/Cast.jsx","utils/mappedCast.js","components/GoBackButton/GoBackButton.jsx","components/MovieDetails/MovieDetails.jsx","components/MovieDetails/MovieNav/MovieNav.jsx","components/Reviews/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.jsx","utils/mappedReviews.js","pages/MovieDetailsPage/MovieDetailsPage.jsx","utils/mappedDetails.js","utils/mappedGenres.js","components/SearchMovie/SearchMovie.jsx","pages/MoviesPage/MoviesPage.jsx","services/fetchApi.jsx","utils/mappedMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst MoviesItem = ({ posterPath, title }) => {\n  return (\n    <Wrapper>\n      <Picture\n        src={`https://themoviedb.org/t/p/w342${posterPath}`}\n        alt={title}\n      />\n      <Title>{title}</Title>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  border-radius: 5px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  width: 260px;\n  transform: scale(1);\n  transition: transform #ffa600;\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0px 0px 8px 6px #ffa600;\n    transform: scale(1.04);\n  }\n`;\n\nconst Picture = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 400px;\n  border-radius: 5px;\n`;\n\nconst Title = styled.h3`\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 12px / 14px;\n  color: #000;\n`;\nexport default MoviesItem;\n","import { Link, useLocation } from 'react-router-dom';\nimport MoviesItem from './MoviesItem/MoviesItem';\nimport styled from 'styled-components';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Wrapper>\n      {movies.map(item => (\n        <Item key={item.id}>\n          <Link\n            to={`/goit-react-hw-05-movies/movies/${item.id}`}\n            state={{ from: location }}\n          >\n            <MoviesItem {...item} />\n          </Link>\n        </Item>\n      ))}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.ul`\n  display: grid;\n  gap: 25px;\n  grid-template-columns: 1fr 1fr 1fr;\n`;\n\nconst Item = styled.li`\n  margin: 0 auto;\n  list-style: none;\n  text-decoration: none;\n`;\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { fetchApi } from 'services/fetchApi';\nimport styled from 'styled-components';\nimport { mappedMovies } from '../../utils/mappedMovies';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchApi().then(({ results }) => {\n      setMovies(mappedMovies(results));\n    });\n  });\n\n  return (\n    <>\n      <Title>Trending Movies</Title>\n\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nconst Title = styled.h1`\n  display: block;\n  text-align: center;\n`;\n\nexport default HomePage;\n","import noPhoto from './nophoto.jpg';\nimport styled from 'styled-components';\n\nconst CastItem = ({ name, character, photo }) => {\n  return (\n    <Wrapper>\n      {photo ? (\n        <Photo src={`https://themoviedb.org/t/p/w342${photo}`} alt={name} />\n      ) : (\n        <NoPhoto src={noPhoto} alt={name} />\n      )}\n\n      <Title>{name}</Title>\n      <Subtitle>{character}</Subtitle>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 124px;\n`;\n\nconst Photo = styled.img`\n  border-radius: 5px;\n`;\n\nconst NoPhoto = styled.img`\n  width: 124px;\n  height: 186px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nconst Title = styled.h4`\n  margin-top: 5px;\n  padding: 0 2px;\n  color: #ffa600;\n  margin: 0;\n  margin-top: 5px;\n  font-size: 14px;\n`;\n\nconst Subtitle = styled.p`\n  margin-top: 5px;\n  padding: 0 2px;\n  color: #000;\n  font-size: 13px;\n  font-weight: bold;\n`;\n\nexport default CastItem;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { fetchCast } from 'services/fetchApi';\nimport { mappedCast } from 'utils/mappedCast';\nimport CastItem from './CastItem/CastItem';\nimport styled from 'styled-components';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    fetchCast(movieId).then(data => {\n      setCast(mappedCast(data));\n    });\n  });\n\n  return (\n    <List>\n      {cast.length > 0 &&\n        cast.map(item => (\n          <Item key={item.id}>\n            <CastItem\n              name={item.name}\n              character={item.character}\n              photo={item.photo}\n            />\n          </Item>\n        ))}\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding: 11px;\n  background-color: ${p => p.theme.mainColor};\n  border-radius: 10px;\n  & .noCredits {\n    margin-right: auto;\n    font-size: 20px;\n  }\n`;\n\nconst Item = styled.li`\n  padding: 8px;\n`;\n\nexport default Cast;\n","export const mappedCast = list =>\n  list.cast.map(item => ({\n    id: item.id,\n    name: item.original_name,\n    character: item.character,\n    photo: item.profile_path,\n  }));\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst GoBackButton = () => {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  const [from, setFrom] = useState('');\n\n  useEffect(() => {\n    if (state?.from) {\n      const { pathname, search } = state.from;\n      setFrom(`${pathname}${search}`);\n      return;\n    }\n\n    setFrom(`/goit-react-hw-05-movies`);\n  }, [state?.from]);\n\n  const handleBack = () => navigate(from);\n\n  return (\n    <Wrapper>\n      <Button onClick={handleBack} type=\"button\">\n        Back\n      </Button>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin-left: 61px;\n  margin-top: 15px;\n`;\n\nconst Button = styled.button`\n  padding: 7px 15px;\n`;\n\nexport default GoBackButton;\n","import styled from 'styled-components';\nconst MovieDetails = ({ movie }) => {\n  return (\n    <Wrapper>\n      <ImgContainer>\n        <img\n          src={`https://themoviedb.org/t/p/w342${movie.posterPath}`}\n          alt={movie.title}\n        />\n      </ImgContainer>\n      <div>\n        <Title>{movie.title}</Title>\n\n        <Span>Genres</Span>\n        <P>{movie.genres}</P>\n        <Span>Overview</Span>\n        <Overview>{movie.overview}</Overview>\n      </div>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  padding: 30px;\n  border: 1px solid #000;\n  border-radius: 10px;\n  margin: 32px 60px;\n  display: flex;\n`;\n\nconst ImgContainer = styled.div`\n  padding-right: 25px;\n  margin-right: 25px;\n  border-right: 1px solid #000;\n`;\n\nconst Title = styled.h3`\n  font-size: 60px;\n  margin: 0;\n  color: #ffa600;\n`;\n\nconst Span = styled.span`\n  font-size: 35px;\n  margin: 0;\n  font-weight: 700;\n  display: block;\n  margin-top: 30px;\n  color: #ffa600;\n`;\n\nconst P = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n`;\n\nconst Overview = styled.p`\n  margin: 15px 0;\n  font-size: 25px;\n`;\n\nexport default MovieDetails;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MovieNav = ({ movieId }) => {\n  return (\n    <LinksMenu>\n      <LinksItem>\n        <NavLink to={`/goit-react-hw-05-movies/movies/${movieId}/cast`}>\n          Cast\n        </NavLink>\n      </LinksItem>\n      <LinksItem>\n        <NavLink to={`/goit-react-hw-05-movies/movies/${movieId}/reviews`}>\n          Reviews\n        </NavLink>\n      </LinksItem>\n    </LinksMenu>\n  );\n};\n\nconst LinksMenu = styled.ul`\n  margin-top: 10px;\n  margin-left: 23px;\n  display: flex;\n  align-items: center;\n\n  background-color: ${p => p.theme.mainColor};\n  border-radius: 10px;\n  list-style: none;\n`;\n\nconst LinksItem = styled.li`\n  margin-right: 10px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport default MovieNav;\n","import noPhoto from './nophoto.jpg';\nimport styled from 'styled-components';\n\nconst ReviewsItem = ({ name, text, photo }) => {\n  return (\n    <Wrapper>\n      <Author>\n        {photo ? (\n          <Avatar src={`https://themoviedb.org/t/p/w342${photo}`} alt={name} />\n        ) : (\n          <NoAvatar src={noPhoto} alt={name} />\n        )}\n        <AuthorName>{name}</AuthorName>\n      </Author>\n\n      <Text>{text}</Text>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #000;\n`;\n\nconst Author = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst AuthorName = styled.span`\n  margin-left: 20px;\n  text-transform: uppercase;\n  color: #ffa600;\n  font-size: 14px;\n  font-weight: 700;\n  font-family: 'Comfortaa', sans-serif;\n`;\n\nconst Text = styled.p`\n  color: #000;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.6;\n  font-family: 'Comfortaa', sans-serif;\n`;\n\nconst Avatar = styled.img`\n  width: 45px;\n  height: 45px;\n  border-radius: 50%;\n  background-color: #000;\n`;\n\nconst NoAvatar = styled.div`\n  width: 45px;\n  height: 45px;\n  border-radius: 50%;\n  background-color: #49297c;\n`;\n\nexport default ReviewsItem;\n","import { useEffect, useState } from 'react';\nimport { fetchReviews } from 'services/fetchApi';\nimport { mappedReviews } from 'utils/mappedReviews';\nimport ReviewsItem from './ReviewsItem/ReviewsItem';\nimport styled from 'styled-components';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    fetchReviews(movieId).then(({ results }) => {\n      setReviews(mappedReviews(results));\n    });\n  });\n\n  return (\n    <List>\n      {reviews.length > 0 ? (\n        reviews.map(item => (\n          <Item key={item.id}>\n            <ReviewsItem name={item.name} text={item.text} photo={item.photo} />\n          </Item>\n        ))\n      ) : (\n        <h3>No Data</h3>\n      )}\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  margin-top: 2px;\n  list-style: none;\n  & img {\n    margin-top: 10px;\n  }\n`;\n\nconst Item = styled.li`\n  margin-top: 8px;\n`;\n\nexport default Reviews;\n","export const mappedReviews = list =>\n  list.map(item => ({\n    id: item.id,\n    name: item.author,\n    photo: item.author_details.avatar_path,\n    text: item.content,\n  }));\n","import Cast from 'components/Cast/Cast';\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport MovieNav from 'components/MovieDetails/MovieNav/MovieNav';\nimport Reviews from 'components/Reviews/Reviews';\nimport { useEffect, useState } from 'react';\nimport { Outlet, Route, Routes, useParams } from 'react-router-dom';\nimport { fetchDetails } from 'services/fetchApi';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { mappedDetails } from 'utils/mappedDetails';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    Loading.circle();\n    fetchDetails(movieId).then(data => {\n      setMovie(mappedDetails(data));\n    });\n    Loading.remove();\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackButton />\n      {movie && <MovieDetails movie={movie} />}\n      <MovieNav movieId={movieId} />\n      <Routes>\n        <Route path=\"/\" element={<Outlet />}>\n          <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n          <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n        </Route>\n      </Routes>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { mappedGenreNames } from './mappedGenres';\n\nexport const mappedDetails = item => ({\n  id: item.id,\n  title: item.title,\n  posterPath: item.poster_path,\n  genres: mappedGenreNames(item.genres),\n  overview: item.overview,\n});\n","export const mappedGenreNames = genres =>\n  genres.map(({ name }) => name).join(', ');\n","import { useState } from 'react';\nimport { BiSearch } from 'react-icons/bi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport styled from 'styled-components';\n\nconst SearchMovie = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleNameChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      Notify.failure('Oops! Entered an empty string');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <button type=\"submit\">\n        <BiSearch size={25} />\n      </button>\n\n      <Input\n        onChange={handleNameChange}\n        type=\"text\"\n        autoComplete=\"off\"\n        value={query}\n        autoFocus\n        placeholder=\"Search images and photos\"\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nconst Input = styled.input`\n  width: 340px;\n  margin-right: 10px;\n\n  background-color: transparent;\n  padding-left: 20px;\n  font-size: 20px;\n  border: 1px solid #000;\n  border-radius: 5px;\n`;\n\nexport default SearchMovie;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from 'services/fetchApi';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { mappedMovies } from 'utils/mappedMovies';\n\nconst PARAM_QUERY = 'query';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [queryParam, setQueryParam] = useSearchParams({});\n\n  useEffect(() => {\n    const query = queryParam.get(PARAM_QUERY);\n\n    if (query) handleSubmit(query);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = query => {\n    setQueryParam({ [PARAM_QUERY]: query });\n    Loading.circle();\n\n    fetchSearch(query).then(({ results }) => {\n      if (results.length === 0) {\n        Notify.failure('Oops! Entered an empty string');\n      } else {\n        setMovies(mappedMovies(results));\n      }\n    });\n    Loading.remove();\n  };\n\n  return (\n    <>\n      <SearchMovie onSubmit={handleSubmit} />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1f2231d799563a30b24b357a44da2aa2';\n\nexport const fetchApi = async () => {\n  try {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n\nexport const fetchDetails = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n\nexport const fetchSearch = async query => {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '1f2231d799563a30b24b357a44da2aa2',\n      query: query,\n      language: 'en-US',\n      include_adult: false,\n    });\n    const url = `${BASE_URL}/search/movie?${searchParams}`;\n    const response = await fetch(url);\n    return response.json();\n  } catch (error) {\n    Notify.failure('Oops, an error occurred');\n  }\n};\n","export const mappedMovies = list =>\n  list.map(item => ({\n    id: item.id,\n    title: item.title,\n    posterPath: item.poster_path,\n    genres: item.genre_ids,\n  }));\n"],"names":["Wrapper","styled","Picture","Title","posterPath","title","src","alt","Item","movies","location","useLocation","map","item","to","id","state","from","useState","setMovies","useEffect","fetchApi","then","results","mappedMovies","Photo","NoPhoto","Subtitle","name","character","photo","noPhoto","List","p","theme","mainColor","movieId","cast","setCast","fetchCast","data","original_name","profile_path","length","Button","navigate","useNavigate","setFrom","pathname","search","onClick","type","ImgContainer","Span","P","Overview","movie","genres","overview","LinksMenu","LinksItem","Author","AuthorName","Text","Avatar","NoAvatar","text","reviews","setReviews","fetchReviews","author","author_details","avatar_path","content","useParams","setMovie","Loading","fetchDetails","poster_path","join","mappedDetails","path","element","Form","Input","onSubmit","query","setQuery","e","preventDefault","trim","Notify","size","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","PARAM_QUERY","useSearchParams","queryParam","setQueryParam","get","handleSubmit","fetchSearch","MoviesList","BASE_URL","API_KEY","url","fetch","response","json","searchParams","URLSearchParams","api_key","language","include_adult","list","genre_ids"],"sourceRoot":""}